"""empty message

Revision ID: 8179554f9881
Revises: 7e1d098b29de
Create Date: 2019-04-08 11:23:24.190824

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import UUID, JSON
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

Session = sessionmaker()
Base = declarative_base()

# revision identifiers, used by Alembic.
revision = '8179554f9881'
down_revision = '7e1d098b29de'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.add_column('local_plan', sa.Column('housing_numbers_found', sa.Boolean(), nullable=True))
    op.add_column('local_plan', sa.Column('plan_period_found', sa.Boolean(), nullable=True))

    class LocalPlan(Base):
        __tablename__ = 'local_plan'

        id = sa.Column(UUID(as_uuid=True), primary_key=True)
        plan_start_year = sa.Column(sa.Date())
        plan_end_year = sa.Column(sa.Date())
        housing_numbers = sa.Column(JSON)
        plan_period_found = sa.Column(sa.Boolean)
        housing_numbers_found = sa.Column(sa.Boolean)

    bind = op.get_bind()
    session = Session(bind=bind)

    for plan in session.query(LocalPlan):
        if plan.housing_numbers is not None:
            plan.housing_numbers_found = True
        if plan.plan_start_year is not None and plan.plan_end_year is not None:
            plan.plan_period_found = True

        session.add(plan)
        session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('local_plan', 'plan_period_found')
    op.drop_column('local_plan', 'housing_numbers_found')
    # ### end Alembic commands ###
