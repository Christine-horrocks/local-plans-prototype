"""empty message

Revision ID: 68fd598458dc
Revises: 4485e62818bd
Create Date: 2019-06-04 15:10:23.859250

"""
import geoalchemy2
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '68fd598458dc'
down_revision = '4485e62818bd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('housing_delivery_test')
    op.drop_table('fact')
    op.drop_table('document')
    op.drop_column('planning_authority', 'geometry')
    op.drop_column('planning_authority_plan', 'local_plan_id_old')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('planning_authority', sa.Column('geometry', geoalchemy2.types.Geometry(srid=4326), autoincrement=False, nullable=True))
    op.create_table('document',
        sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('type', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
        sa.Column('local_plan_id_old', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
        sa.Column('planning_authority_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
        sa.Column('local_plan_id', postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['local_plan_id'], ['local_plan.id'], name='document_local_plan_id_fkey'),
        sa.ForeignKeyConstraint(['planning_authority_id'], ['planning_authority.id'], name='document_planning_authority_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='document_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_table('fact',
        sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column('fact', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('fact_type', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('document_id', postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column('from_', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('to', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['document_id'], ['document.id'], name='fact_document_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='fact_pkey1')
    )
    op.create_table('housing_delivery_test',
        sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column('from_year', sa.DATE(), autoincrement=False, nullable=True),
        sa.Column('to_year', sa.DATE(), autoincrement=False, nullable=True),
        sa.Column('homes_required', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('homes_delivered', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('planning_authority_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['planning_authority_id'], ['planning_authority.id'], name='housing_delivery_test_planning_authority_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='housing_delivery_test_pkey')
    )
    # ### end Alembic commands ###
